{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Piggytech API",
    "description" : "INTEGRATED FINANCE AS A SERVICE\n\n## Authentication\n\nEvery endpoint requires some form of authentication using a bearer token header. The key required for each request is a secret key.\n\n`Authorization: Bearer sk_live_****`",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://{{staging_base_url}}"
  } ],
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer"
      }
    }
  },
  "tags" : [ {
    "name" : "Customer"
  }, {
    "name" : "Transfers"
  }, {
    "name" : "Restriction"
  }, {
    "name" : "Cards"
  }, {
    "name" : "Interest"
  }, {
    "name" : "Wallet"
  } ],
  "paths" : {
    "/customer" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create Customer",
        "description" : "This endpoint allows you create a customer.\n\n**Request Body**\n\n| Field | Datatype | Description |\n| --- | --- | --- |\n| Name | String | `Required` The name of the customer |\n| email | String | `Required`The email of the customer |\n| phone | String | `Required` The the phone number of the customer |\n| identifier | String | `Required` The identifier of the customer |\n| currency | String | `Required` The currency the customer will transact in |\n| country | String | `Required` The country of the customer |\n| type | String | `Required` The type of the customer |\n| tag | String | `Required` The tag of the customer |\n| interestRate | number | `Required` The interest rate that you want to set for the customer |\n| interestEnabled | boolean | `Optional` This field allows you enable or disable the customer's |",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : "{\n    \"name\":\"John Doe\",  // Required\n    \"email\":\"test@email.com\",  // Required\n    \"phone\":\"0913111674327\",   // Required\n    \"identifier\":\"39323232-22332\",   // Required\n    \"currency\": \"NGN\",      // Required\n    \"country\": \"NG\",      // Required\n    \"type\": \"Business\",    // Required\n    \"tag\": \"johndoe\",    // Required\n    \"interestRate\": 10,  // Required\n    \"interestEnabled\": true\n}"
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "content-type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Thu, 26 Oct 2023 10:17:36 GMT"
                }
              },
              "Connection" : {
                "schema" : {
                  "type" : "string",
                  "example" : "keep-alive"
                }
              },
              "Keep-Alive" : {
                "schema" : {
                  "type" : "string",
                  "example" : "timeout=5"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "status" : true,
                  "message" : "Customer created successfully",
                  "data" : {
                    "walletId" : 8708703838032364000,
                    "customerId" : 1791174810391281700
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customer/webhook" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Create customer webhook url",
        "description" : "This endpoint allows you create a webhook url for your customer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : {
                  "webhook_url" : "https://127.0.0.1"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/customers" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get All Customers",
        "description" : "This endpoint allows you retrieve all your customers",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/customer/{customer_id}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get Customer by ID",
        "description" : "This endpoint allows you fetch a customer by its ID",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The unique identifier of the customer",
          "example" : "dbe6d064-bc74-41e1-925c-1a1819d84321"
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "content-type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Fri, 27 Oct 2023 12:46:33 GMT"
                }
              },
              "Connection" : {
                "schema" : {
                  "type" : "string",
                  "example" : "keep-alive"
                }
              },
              "Keep-Alive" : {
                "schema" : {
                  "type" : "string",
                  "example" : "timeout=5"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "status" : false,
                  "message" : "Customer fetched successfully",
                  "data" : {
                    "id" : "db16c15f-415a-4368-8920-9090d791e625",
                    "type" : "Business",
                    "phone" : "09131118888",
                    "email" : "johndoe@example.com",
                    "identifier" : "ID123",
                    "name" : "Azeez Doe",
                    "country" : "NG",
                    "identity_number" : null,
                    "tier" : "Tier 1",
                    "created_by" : "c096507d-dc32-45d2-9c01-871a27abfd10",
                    "created_at" : "2023-10-27T03:23:48.802000000Z",
                    "updated_at" : "2023-10-27T03:23:48.802000000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customer/{customer_id}/balance/" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Fetch Balance (Wallet Aggregate Under Customer)",
        "description" : "This endpoint allows you fetch all the balance of your customer's wallet",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customer_id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The unique identifier of the customer",
          "example" : "dbe6d064-bc74-41e1-925c-1a1819d84321"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Sun, 12 Nov 2023 01:21:59 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "8289448d0f5056bf5a4090b124e024a9"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "status" : true,
                  "message" : "Customer balance retrieved successfully",
                  "data" : {
                    "balance" : "40000"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/banks/banks" : {
      "get" : {
        "tags" : [ "Transfers" ],
        "summary" : "List Banks",
        "description" : "This endpoint allows you fetch a list of banks that you can send money to",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/transfer/bank" : {
      "post" : {
        "tags" : [ "Transfers" ],
        "summary" : "Transfer to bank account",
        "description" : "This endpoint allows you transfer to a bank account\n\n**Request Body**\n\n| Field | Datatype | Description |\n| --- | --- | --- |\n| source | String | `Required` The name of the customer |\n| accountNumber | String | `Required` The account number of the receiver |\n| bankCode | String | `Required` The code of the bank |\n| bankName | String | `Required` The name of the bank |\n| amount | String | `Required` The amount the customer wants to send |\n| narration | String | `Required` The description of what the transfer is for |\n| currency | String | `Required` The currency which is used to fund the transfer |\n| reference | String | `Required` The unique reference of the transaction in your system . This reference must be unique |",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : {
                  "source" : "4e628341-7cee-455e-bb9f-5165032f3984",
                  "accountNumber" : "1100004961",
                  "bankCode" : "50211",
                  "bankName" : "Kuda bank",
                  "amount" : 5000,
                  "narration" : "Payment for things",
                  "currency" : "NGN",
                  "reference" : "REF-74b3d-4501-9ff5-e2j230521426757653403aea33c"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          },
          "example" : "Bearer sk_yoEgfZmZt9yvrauKGdeothqp"
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Thu, 16 Nov 2023 06:15:23 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "a95f55010206d23f730e7947e62be951"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "status" : false,
                  "message" : "The provided reference has already been used for another transaction. Please use a unique reference."
                }
              }
            }
          }
        }
      }
    },
    "/transfer/wallet" : {
      "post" : {
        "tags" : [ "Transfers" ],
        "summary" : "Wallet to wallet transfer",
        "description" : "This endpoint allows you transfer to a wallet\n\n**Request Body**\n\n| Field | Datatype | Description |\n| --- | --- | --- |\n| source | String | `Required` The customer ID of the customer |\n| destination | String | `Required` The customer Id of the customer that wants to receive the funds |\n| amount | String | `Required` The amount that should be sent |\n| currency | String | `Required` The currency that is used to fund the transfer |\n| reference | String | `Required` The unique reference of the transaction |",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : {
                  "source" : "4e628341-7cee-455e-bb9f-5165032f3984",
                  "destination" : "65c7a0bb-ade9-41f8-a267-1c5ed7ca14c4",
                  "amount" : 100,
                  "narration" : "Payment for services",
                  "currency" : "NGN",
                  "reference" : "ono"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Sat, 11 Nov 2023 00:06:33 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "905553bcef5745861c84dbfd3cb1cc06"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example-0" : {
                    "summary" : "Low Balance",
                    "value" : {
                      "status" : false,
                      "message" : "Kindly topup your wallet."
                    }
                  },
                  "example-1" : {
                    "summary" : "Identical Transaction",
                    "value" : {
                      "status" : false,
                      "message" : "The provided reference has already been used for another transaction. Please use a unique reference."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/restrict/{type}/{property}/{id}" : {
      "post" : {
        "tags" : [ "Restriction" ],
        "summary" : "Restrict Property",
        "description" : "This endpoint allows you restrict a property\n\n|  |  |  |\n| --- | --- | --- |\n| type | string | The type of property that you want to restrict |\n| property | string | The type of property that you want to restrict |\n| id | string | he unique Id of the property that you want to restrict |\n| amount | string | The amount |\n| reason | string | Your reason for restricting the customer. |\n| reference | string | Your unique reference or ID for restricting the customer |",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : {
                  "type" : "wallet",
                  "property" : "property_name",
                  "id" : 123,
                  "amount" : 45.67,
                  "reason" : "Some reason",
                  "reference" : "ref123"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The type of property that you want to  restrict"
        }, {
          "name" : "property",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The property that you want to restrict"
        }, {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique Id of the property that you want to restrict"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/restrict/{reference}" : {
      "delete" : {
        "tags" : [ "Restriction" ],
        "summary" : "Lift Restriction",
        "description" : "This endpoint allows you lift a restriction",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "reference",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique reference of the restriction that you want to lift"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Restriction" ],
        "summary" : "Get Restriction by Reference",
        "description" : "This endpoint allows you retrieve a restriction by a reference",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "reference",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique reference of the restriction that you want to fetch"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/restrict/{type}/{id}" : {
      "get" : {
        "tags" : [ "Restriction" ],
        "summary" : "Get Restrictions for Property",
        "description" : "This endpoint allows you get all the restrictions for a property",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The type of restriction that you want to fetch"
        }, {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique Id of the restriction that you want to fetch"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards" : {
      "get" : {
        "tags" : [ "Cards" ],
        "summary" : "Get All Cards",
        "description" : "This endpoint allows you retrieve all cards belonging a customer",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards/link" : {
      "post" : {
        "tags" : [ "Cards" ],
        "summary" : "Link Card",
        "description" : "This endpoint allows you link a card",
        "requestBody" : {
          "content" : { }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards/{cardId}/activate" : {
      "post" : {
        "tags" : [ "Cards" ],
        "summary" : "Activate Card",
        "description" : "This endpoint allows you activate a card",
        "requestBody" : {
          "content" : { }
        },
        "parameters" : [ {
          "name" : "cardId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique identifier  of the card that you want to activate"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards/{cardId}" : {
      "get" : {
        "tags" : [ "Cards" ],
        "summary" : "Fetch Card",
        "description" : "This endpoint allows you retrieve a card",
        "parameters" : [ {
          "name" : "cardId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique identifier of the card that you want to fetch"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards/{cardId}/block" : {
      "get" : {
        "tags" : [ "Cards" ],
        "summary" : "Block Card",
        "description" : "This endpoint allows you black a card",
        "parameters" : [ {
          "name" : "cardId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique identifier of the card that you want to block"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards/{cardId}/unblock" : {
      "get" : {
        "tags" : [ "Cards" ],
        "summary" : "Unblock Card",
        "description" : "This endpoint allows you unblock a card",
        "parameters" : [ {
          "name" : "cardId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique identifier of the card that you want to unblock"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards/{cardId}/terminate" : {
      "delete" : {
        "tags" : [ "Cards" ],
        "summary" : "Terminate Card",
        "description" : "This endpoint allows you terminate a card",
        "parameters" : [ {
          "name" : "cardId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The unique identifier of the card that you want to terminate"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/cards/cards/reset-pin" : {
      "post" : {
        "tags" : [ "Cards" ],
        "summary" : "Reset Card PIN",
        "description" : "This endpoint allows you reset the card pin",
        "requestBody" : {
          "content" : { }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/wallet/interest/toggle/{wallet_id}" : {
      "get" : {
        "tags" : [ "Interest" ],
        "summary" : "Toggle interest status",
        "description" : "This endpoint allows you fetch the status of an interest",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "wallet_id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The wallet ID of the customer that you want to enable interest for "
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/wallet/interest/{walletId}" : {
      "get" : {
        "tags" : [ "Interest" ],
        "summary" : "Fetch Accrued Interest",
        "description" : "This endpoint lets you retrieve the amount of all the interests received by the customer",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "walletId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The wallet ID of the customer that you want to fetch interests for "
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Thu, 16 Nov 2023 12:10:27 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "9038263518de8a103494f1da4dd8c4b5"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "status" : true,
                  "message" : "Interest accrued for the wallet fetched successfully",
                  "data" : [ {
                    "id" : "9cdb12ae-5eee-4661-af09-e345cdf10447",
                    "wallet_id" : "5b8ca4fc-b8b7-417c-9a14-f5fb0a196870",
                    "balance" : 0,
                    "percentage" : 0.1,
                    "interest_date" : "14-11-2023",
                    "created_at" : "2023-11-14T23:00:11.730000000Z",
                    "updated_at" : "2023-11-14T23:00:11.730000000Z"
                  }, {
                    "id" : "c49028ef-d5ef-47d4-a422-4f158a1c9919",
                    "wallet_id" : "5b8ca4fc-b8b7-417c-9a14-f5fb0a196870",
                    "balance" : 0,
                    "percentage" : 0.1,
                    "interest_date" : "14-11-2023",
                    "created_at" : "2023-11-14T08:14:05.631000000Z",
                    "updated_at" : "2023-11-14T08:14:05.631000000Z"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/wallets" : {
      "get" : {
        "tags" : [ "Wallet" ],
        "summary" : "Get wallets",
        "description" : "This endpoint allows you fetch all wallets",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Sat, 11 Nov 2023 07:06:19 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "538ae565efeec9601ce121f88b4c4cb9"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "status" : false,
                  "message" : "Retrieved wallet successfully",
                  "data" : {
                    "id" : "46b0bf50-157d-4611-bd9b-917c8c74bb85",
                    "customer_id" : "db16c15f-415a-4368-8920-9090d791e625",
                    "currency" : "NGN",
                    "identifier" : "19c994b4-900d-4e47-85ce-861261a6067d",
                    "tag" : "adxvi",
                    "created_at" : "2023-11-11T07:06:00.586000000Z",
                    "created_by" : "c096507d-dc32-45d2-9c01-871a27abfd10",
                    "updated_at" : "2023-11-11T07:06:00.586000000Z",
                    "name" : "Azeez Adio"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/{id}" : {
      "get" : {
        "tags" : [ "Wallet" ],
        "summary" : "Get wallet by ID",
        "description" : "The endpoint allows you retrieve a specific wallet",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The wallet ID for the wallet you want to retrieve details from"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Sat, 11 Nov 2023 07:06:19 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "538ae565efeec9601ce121f88b4c4cb9"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "example" : {
                  "status" : false,
                  "message" : "Retrieved wallet successfully",
                  "data" : {
                    "id" : "46b0bf50-157d-4611-bd9b-917c8c74bb85",
                    "customer_id" : "db16c15f-415a-4368-8920-9090d791e625",
                    "currency" : "NGN",
                    "identifier" : "19c994b4-900d-4e47-85ce-861261a6067d",
                    "tag" : "adxvi",
                    "created_at" : "2023-11-11T07:06:00.586000000Z",
                    "created_by" : "c096507d-dc32-45d2-9c01-871a27abfd10",
                    "updated_at" : "2023-11-11T07:06:00.586000000Z",
                    "name" : "Azeez Adio"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/create/{mode}" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "Create Wallet",
        "description" : "This endpoint allows you to create a wallet\n\n**Request Body**\n\n| Field | Datatype | Description |\n| --- | --- | --- |\n| customerId | String | `Required` The customer ID of the customer that you want to create a wallet for |\n| currency | String | `Required` The currency the wallet should be created in |\n| wallet | Array | `Required` This field contains either multiple objects or a single object comprising the names and tags of your customers |",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : {
                  "customerId" : "db16c15f-415a-4368-8920-90",
                  "currency" : "NGN",
                  "wallet" : [ {
                    "name" : "John doe",
                    "tag" : "johndoe"
                  }, {
                    "name" : "John dough",
                    "tag" : "johndough"
                  } ]
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mode",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "bulk"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Sat, 11 Nov 2023 05:22:02 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "6814e063a8fdd2dc21e40b973f8e1541"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example-0" : {
                    "summary" : "Single Wallet",
                    "value" : {
                      "status" : false,
                      "message" : "Wallet created successfully",
                      "data" : {
                        "wallet" : {
                          "id" : "72480121-c44a-4c70-9875-d66c534e376c"
                        }
                      }
                    }
                  },
                  "example-1" : {
                    "summary" : "Bulk Wallet",
                    "value" : {
                      "status" : false,
                      "message" : "Bulk wallets created successfully",
                      "data" : {
                        "wallet" : [ {
                          "id" : "576aa15d-0d7b-4a77-b0d2-c045c2c9cac7"
                        }, {
                          "id" : "cc7985b7-497b-4d78-a0df-d5b5ec44976b"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "Content-Type" : {
                "schema" : {
                  "type" : "string",
                  "example" : "application/json; charset=utf-8"
                }
              },
              "Date" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Sun, 12 Nov 2023 18:49:38 GMT"
                }
              },
              "Ngrok-Trace-Id" : {
                "schema" : {
                  "type" : "string",
                  "example" : "1aa14f676c53a5fca96900f7c4ee3b0f"
                }
              },
              "Vary" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Accept-Encoding"
                }
              },
              "Transfer-Encoding" : {
                "schema" : {
                  "type" : "string",
                  "example" : "chunked"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                },
                "examples" : {
                  "example-0" : {
                    "summary" : "Create Wallet(tag already exist)",
                    "value" : {
                      "status" : false,
                      "message" : "tag already exist"
                    }
                  },
                  "example-1" : {
                    "summary" : "Bulk Create Wallet(tags already exist)",
                    "value" : {
                      "status" : false,
                      "message" : "Tag(s) already exist: adxvi, waxmur"
                    }
                  },
                  "example-2" : {
                    "summary" : "Max bulk wallet",
                    "value" : {
                      "status" : false,
                      "message" : "Cannot create more than 10 wallets in a bulk operation."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/{wallet_id}/balance" : {
      "get" : {
        "tags" : [ "Wallet" ],
        "summary" : "Fetch Wallet Balance",
        "description" : "This endpoint allows you fetch the balance of a wallet",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "wallet_id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "example" : "The wallet ID for the wallet you want to retrieve details from"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/wallet/{id}/credit" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "credit wallet",
        "description" : "This endpoint lets you credit a wallet .\n\n**Request Body**\n\n| Field | Datatype | Description |\n| --- | --- | --- |  \n| source | String | `Required` The customer ID of the customer that wants to make the payment |  \n| destination | String | `Required` The customer Id of the customer that wants to receive the payment |  \n| amount | String | `Required` The amount that should be sent |  \n| currency | String | `Required` The currency that is used to fund the transfer |  \n| reference | String | `Required` The unique reference of the transaction |",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : {
                  "source" : "123e4567-e89b-12d3-a456-426614174001",
                  "destination" : "7207ef13-3f8b-49a8-b99d-ebaeecd5feda",
                  "amount" : 5000,
                  "narration" : "Wallet Funding",
                  "currency" : "NGN",
                  "reference" : "REF-0902672311080110183961000redf"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The wallet ID of the wallet that you want to credit",
          "example" : "7207ef13-3f8b-49a8-b99d-ebaeecd5feda"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/wallet/{id}/debit" : {
      "post" : {
        "tags" : [ "Wallet" ],
        "summary" : "Debit wallet",
        "description" : "This endpoint allows you debit a wallet.\n\n**Request Body**\n\n| Field | Datatype | Description |\n| --- | --- | --- |\n| source | String | `Required` The customer ID of the customer that wants to make the payment |\n| destination | String | `Required` The customer ID of the customer that wants to receive the payment |\n| amount | String | `Required` The amount that should be sent |\n| currency | String | `Required` The currency that is used to fund the transfer |\n| reference | String | `Required` The unique reference of the transaction |",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "example" : {
                  "source" : "4e628341-7cee-455e-bb9f-513984",
                  "destination" : "4e628341-7cee-455e-bb9f-5165032",
                  "amount" : 10000000,
                  "narration" : "Payment for dodo",
                  "currency" : "NGN",
                  "reference" : "REF-090267231108011018396100004961"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The wallet ID of the wallet that you want to debit",
          "example" : "65c7a0bb-ade9-41f8-a267-1c5ed7ca14c4"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    }
  }
}